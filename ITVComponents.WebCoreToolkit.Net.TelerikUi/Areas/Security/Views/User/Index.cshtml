@using ITVComponents.WebCoreToolkit.Net.Extensions
@using ITVComponents.WebCoreToolkit.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Resources
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.ViewComponents
@using Kendo.Mvc.UI
@{
    Layout = "_Layout";
}
@{

    ViewBag.Title = TextsAndMessagesHelper.IWCN_Titles_Users;
}


<div class="row">
    @await Component.InvokeAsync(typeof(ShowTable), new { customViewData = new Dictionary<string, object> { { "roleId", null }, {"tenantId", ViewData["tenantId"]} } })
</div>

@if (ViewData["tenantId"] != null)
{
    @Html.DetailViewScript("roles2User", "roles2UserRoot#=UserId#", $"~/Security/Role/RoleTable?tenantUserId=#=UserId#&tenantId={ViewData["tenantId"]}", false)
}
else
{
    <script id="UserDetails" type="text/kendo-tmpl">
    @(Html.Kendo().TabStrip().Name("UserAssignment#=UserId#")
        .SelectedIndex(0)
        .Items(item =>
        {
            item.Add().Text(TextsAndMessagesHelper.IWCN_Titles_Properties).LoadContentFrom("PropertyTable", "User", new {userId = "#=UserId#"});
            item.Add().Text(TextsAndMessagesHelper.IWCN_Titles_Tenants).LoadContentFrom("TenantTable", "Tenant", new { userId = "#=UserId#" });

        }).ToClientTemplate())
</script>
}