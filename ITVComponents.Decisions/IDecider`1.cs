using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading.Tasks;

namespace ITVComponents.Decisions
{
    /// <summary>
    /// A Decider declaration that evaluates provided constraints and results to a boolean result for a Decide - call
    /// </summary>
    /// <typeparam name="T">the base-type for which to do decisions</typeparam>
    public interface IDecider<T>:IDecider where T:class 
    {
        /// <summary>
        /// The DeciderContext providing data of Deciders for past decisions
        /// </summary>
        IDeciderContext<T> Context { get; }

        /// <summary>
        /// Adds a constraint to the list of available constraints
        /// </summary>
        /// <param name="constraint">a Constraint that needs to be processed when calling the Decide-Method</param>
        void AddConstraint(IConstraint<T> constraint);

        /// <summary>
        /// Evaluates the provided data with the available constraints
        /// </summary>
        /// <param name="value">the provided data</param>
        /// <param name="method">the used decider-method.</param>
        /// <param name="messages">the messages that were generated by the attached constraints</param>
        /// <returns>a value indicating whether the provided data meets the criteria of this Decider or not</returns>
        DecisionResult Decide(T value, DecisionMethod method, out string messages);
    }

    [Flags]
    public enum DecisionMethod
    {
        /// <summary>
        /// Calls the provided constraints until one of them returns false. Only the first Error-message is returned in this case
        /// </summary>
        Simple = 1,

        /// <summary>
        /// Issues a full-evaluation of all constraints and returns a detailed report of why an object is accepted
        /// </summary>
        FullSuccessMessagesOnly = 2,

        /// <summary>
        /// Issues a full-evaluation of all constraints and returns a detailed report of why an object is not accepted
        /// </summary>
        FullErrorMessagesOnly = 4,

        Full = 6
    }

    [Flags]
    public enum DecisionResult
    {
        None = 0,
        Success = 1,
        Acceptable = 2,
        Fail = 4
    }
}
