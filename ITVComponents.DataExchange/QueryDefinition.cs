using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ITVComponents.DataExchange
{
    /// <summary>
    /// Defines a single query
    /// </summary>
    public class QueryDefinition
    {
        /// <summary>
        /// The Source connection identifier that is used to gather the data
        /// </summary>
        public string Source { get; set; }

        /// <summary>
        /// The Query that will be executed
        /// </summary>
        public string Query { get; set; }

        /// <summary>
        /// Gets or sets the Type of the defined Query
        /// </summary>
        public QueryType QueryType { get; set; }

        /// <summary>
        /// The desired Resultset for calls that provide multiple resultsets
        /// </summary>
        public int DesiredResultSet { get; set; }

        /// <summary>
        /// The Targets that will be delivered with the gathered data
        /// </summary>
        public TargetDefinition[] Targets { get; set; }

        /// <summary>
        /// The Parameters for the query
        /// </summary>
        public ParameterDefinition[] Parameters { get; set; }
    }

    /// <summary>
    /// Defines the Type of a Query
    /// </summary>
    public enum QueryType
    {
        /// <summary>
        /// A normal SQL - Query
        /// </summary>
        Query = 0,

        /// <summary>
        /// A Stored Procedure
        /// </summary>
        Procedure = 1
    }

    /// <summary>
    /// Defines a single Target and declares how a recordset has to be registered
    /// </summary>
    public class TargetDefinition
    {
        /// <summary>
        /// Gets or sets the Name of the DataContainer in which to register the recordset that was generated by the containing query
        /// </summary>
        public string TargetName { get; set; }

        /// <summary>
        /// Gets or sets the name under which the dataset must be registered in the defined target
        /// </summary>
        public string RegisterAs { get; set; }
    }

    /// <summary>
    /// A Parameter object that will be passed to a query
    /// </summary>
    public class ParameterDefinition
    {
        /// <summary>
        /// The name of a parameter
        /// </summary>
        public string ParameterName { get; set; }

        /// <summary>
        /// The value of a parameter
        /// </summary>
        public object ParameterValue { get; set; }
    }

    /// <summary>
    /// Callback for IStructureBuilder objects that enables them to request data from a DataCollector object
    /// </summary>
    /// <param name="query">the query from to get the data</param>
    public delegate void ExecuteQuery(QueryDefinition query);
}
