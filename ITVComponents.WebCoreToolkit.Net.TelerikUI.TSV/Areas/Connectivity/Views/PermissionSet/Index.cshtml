@using ITVComponents.WebCoreToolkit.Extensions
@using ITVComponents.WebCoreToolkit.Net.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Helpers
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Options
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.TenantSecurityViews.Helpers
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.TenantSecurityViews.ViewModel
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.ViewComponents
@using Kendo.Mvc.UI
@using Microsoft.Extensions.Options
@using TextsAndMessagesHelper = ITVComponents.WebCoreToolkit.Net.TelerikUi.TenantSecurityViews.Resources.TextsAndMessagesHelper
@inject IOptions<ViewOptions> viewOptions
@{
    Layout = viewOptions.Value.LayoutPage;
}

@(Html.Kendo().Grid<PermissionSetViewModel>().Name("PermissionSetList")
    //.HtmlAttributes(new { style = "width:50vw;" })
    .Columns(columns =>
    {
        columns.Bound(c => c.Name).Title(TextsAndMessagesHelper.IWCN_General_DisplayName);
        columns.Command(ga =>
        {
            ga.Edit();
            ga.PopupConfirmDelete();
        }).Width(180);

    })
    .ToolBar(toolbar =>
    {
        toolbar.RefreshTable();
        toolbar.Create();
    })
    .DataSource(dataSource =>
    {
        var src = dataSource
            .Ajax()
            .Read(read => read.Action("Read", "PermissionSet"));
        if (Context.RequestServices.VerifyUserPermissions(new[] { "Apps.PermissionSets.Write" }))
        {
            src.Create(create => create.Action("Create", "PermissionSet"))
                .Update(update => update.Action("Update", "PermissionSet"))
                .Destroy(destroy => destroy.Action("Destroy", "PermissionSet"));
        }
        src.Model(m => m.Id(t => t.AppPermissionSetId))
            .Sort(n => n.Add(m => m.Name));
    })
    .Scrollable(s => s.Height("auto"))
    .Pageable(p => p.Input(false).Numeric(true).Info(true).PreviousNext(true).PageSizes(true))
    .Sortable(c => c.Enabled(true))
    .Filterable(f => f.Enabled(true))
    .Resizable(c => c.Columns(true))
    .ClientDetailTemplateId("PermSetDetails"))

@Html.DetailViewScript("PermSetDetails", "Set#=AppPermissionSetId#", "~/Connectivity/PermissionSet/PermissionTable?parentId=#=AppPermissionSetId#")