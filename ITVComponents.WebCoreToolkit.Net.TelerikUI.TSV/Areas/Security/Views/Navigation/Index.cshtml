@using ITVComponents.WebCoreToolkit.Net.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Resources
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.TenantSecurityViews.Options
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.ViewComponents
@using Microsoft.Extensions.Options
@using TextsAndMessagesHelper = ITVComponents.WebCoreToolkit.Net.TelerikUi.TenantSecurityViews.Resources.TextsAndMessagesHelper
@inject IOptions<SecurityViewsOptions> options
@{
    Layout = "_Layout";
}
@{

    ViewBag.Title =TextsAndMessagesHelper.IWCN_Titles_Navigation;
}
<script src="/_content/ITVComponents.WebCoreToolkit.Net.TelerikUi.TenantSecurityViews/js/viewScripts.min.js"></script>
<div class="row">
    @await Component.InvokeAsync(typeof(ShowTable), new { customViewData = new Dictionary<string, object> { { "parentId", null }, { "Permissions", ViewData["Permissions"] } } })
</div>

@if (options.Value.TenantLinkMode == LinkMode.MultiSelect)
{
    @Html.DetailViewScript("NavDetails", "Nav#=NavigationMenuId#", "~/Security/Navigation/NavTable?parentId=#=NavigationMenuId#")
}
else
{
    @Html.DetailViewScript("NavDetails", "Nav#=NavigationMenuId#", "~/Security/Navigation/NavDetailTabs?parentId=#=NavigationMenuId#")
}