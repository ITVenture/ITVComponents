@using ITVComponents.WebCoreToolkit.Net.Extensions
@using Microsoft.AspNetCore.Mvc.ModelBinding.Metadata
@using System.Text.Encodings.Web
@using System.Collections
@using ITVComponents.WebCoreToolkit.Extensions
@using ITVComponents.WebCoreToolkit.Models
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Resources
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.ViewComponents
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.ViewModel
@using ITVComponents.WebCoreToolkit.Net.ViewModel
@using ITVComponents.WebCoreToolkit.Routing
@using Kendo.Mvc.UI
@using TextsAndMessagesHelper = ITVComponents.WebCoreToolkit.Net.TelerikUi.Resources.TextsAndMessagesHelper
@inject IUrlFormat urlFormatter;
@model ITVComponents.WebCoreToolkit.Net.TelerikUi.Options.ConfigExchangeOptions

<a href="@(urlFormatter.FormatUrl("[SlashPermissionScope]/File"))/@(ViewData["ConfigLink"])">Download Configuration</a>


@(await Component.InvokeAsync(typeof(ConfigurationDiffViewer), new { 
    postTarget=urlFormatter.FormatUrl("[SlashPermissionScope]/Util/AssemblyDiagnostics/ApplyChanges"), 
    uploadModuleName=Model.UploadModuleName,
    handlerReason=Model.HandlerReason,
    uploadHintCallback=Model.UploadHintCallback,
    resultCallback=Model.ResultCallback,
    handlerTarget=Model.HandlerTarget,
    idExtension=Model.IdExtension,
    uploaderDivId=Model.UploaderDivId,
    resultTab=Model.ResultTab
}))