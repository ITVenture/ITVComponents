@using ITVComponents.WebCoreToolkit.Extensions
@using ITVComponents.WebCoreToolkit.Net.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Extensions
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Helpers
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.Resources
@using ITVComponents.WebCoreToolkit.Net.TelerikUi.ViewComponents
@{
    Layout = "_Layout";
}
@{

    ViewBag.Title = TextsAndMessagesHelper.IWCN_Titles_Permissions;
    var isAdmin = Context.RequestServices.VerifyUserPermissions(new[] {ToolkitPermission.Sysadmin});
}
<script src="/_content/ITVComponents.WebCoreToolkit.Net.TelerikUi/js/viewScripts.min.js"></script>

<div class="row">
    @await Component.InvokeAsync(typeof(ShowTable), new { customViewData = new Dictionary<string, object> { { "tenantId", null }, { "roleId", null }, {"renderDetails", !isAdmin} } })
</div>

@if (!isAdmin)
{
    @Html.DetailViewScript("PermissionDetails", "Perm#=PermissionId#_#=TenantId#", "~/Security/Role/RoleTable?permissionId=#=PermissionId#&tenantId=#=TenantId#")
}